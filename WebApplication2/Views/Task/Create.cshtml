@model ToDoListWebApplications.Models.ToDo

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Task/_LayoutPage1.cshtml";
}

@using (Html.BeginForm("Create", "Task", FormMethod.Post, new { enctype ="multipart/form-data", @class = "form-inline my-2 my-lg-0" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <h2 class="text-info">Create Task</h2>
        <hr />
        <div class="border container border-primary" style="padding: 30px; ">
            <h4 class="text-danger">@ViewBag.msg</h4>
            <div class="form-group">
                <div class="col-md-10">
                    <label for="TaskName"><strong>Task Name</strong></label>
                    @Html.EditorFor(model => model.ToDoName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ToDoName, "", new { @class = "text-danger" })
                </div>
            </div>

            @*////////////////
        ////////////////
        send data as httppost request not query string
        ////////////////
        ////////////////*@

            <div class="form-group">
                <label for="TaskDescription"><strong>Task Description</strong></label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ToDoDescription, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ToDoDescription, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <label for="DueDate" class="mt-2"><strong>Due Date</strong></label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @type = "date", @class = "form-control datepicker" } })
                    @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <fieldset class="form-group container " style="margin: 10px 0px">
                    <label class="form-group" style="margin: 10px -10px">
                        <strong>Priority</strong>
                    </label>
                    <div class="form-check">
                        <label class="form-check-label">
                            <input type="radio" class="form-check-input" name="Priority" id="Low" value="Low" checked="checked">
                            Low
                        </label>
                    </div>
                    <div class="form-check">
                        <label class="form-check-label">
                            <input type="radio" class="form-check-input" name="Priority" id="Medium" value="Medium">
                            Medium
                        </label>
                    </div>
                    <div class="form-check">
                        <label class="form-check-label">
                            <input type="radio" class="form-check-input" name="Priority" id="High" value="High">
                            High
                        </label>
                    </div>
                </fieldset>
            </div>

            <div class="form-group">
                <strong>
                    @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2 " })
                </strong>
                <div class="col-md-10">
                    <input type="file" name="ImageFile" id="ImageFile" />
                    @Html.ValidationMessageFor(model => model.Image, "Images must be in a .PNG, .JPG, or .GIF format.", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <hr />
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" class="btn btn-success" style="margin-right: auto">Create</button>
                    <a class="btn btn-danger" href="/Task/index">Cancel</a>
                </div>
            </div>
            @*@Html.ValidationSummary()*@
        </div>
    </div>
}

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
